@inject GameState GameStateProvider
@implements IDisposable

<div>
    <div class="status">Next player: @GameStateProvider.symbol @GameStateProvider.turn</div>
    <div class="board-row">
        <Square value="0" 
                OnClick="squareClick"/>
        <Square value="1" 
                OnClick="squareClick"/>
        <Square value="2" 
                OnClick="squareClick"/>
    </div>
    <div class="board-row">
        <Square value="3"
                OnClick="squareClick"/>
        <Square value="4"
                OnClick="squareClick"/>
        <Square value="5"
                OnClick="squareClick"/>
    </div>
    <div class="board-row">
        <Square value="6"
                OnClick="squareClick" />                        .
        <Square value="7"
                OnClick="squareClick"/>                         .
        <Square value="8"
                OnClick="squareClick"/>
    </div>
</div>

@code {

    protected override void OnInitialized()
    {
        GameStateProvider.OnChange += StateHasChanged;
    }

    void squareClick(int i)
    {
        GameStateProvider.squares[i] = GameStateProvider.symbol;
        GameStateProvider.nextTurn();
    }

    public void Dispose()
    {
        GameStateProvider.OnChange -= StateHasChanged;
    }
}
