@page "/"

@inject GameState GameStateProvider
@inject GameService GameService
@inject IJSRuntime IJSRuntime

<div class="game">
    <div class="game-board">
        <Board handleBoardClick="handleClick" />
    </div>
    <div class="game-info">
        <div class="status">
            @status
        </div>
        <ol>
            @{
                for (int i = 0; i < GameStateProvider.history.Count; i++)
                {
                    int index = i;
                    <li>
                        <button @onclick=@(() => jumpTo(index))>
                            @if (index == 0)
                            {
                                @:Go to game start

                            }
                            else
                            {
                                @:Go to move # @index
                            }
                        </button>
                    </li>
                }
            }
        </ol>
    </div>
</div>

@code {
    public string status { get; set; }
    protected override void OnInitialized()
    {
        setStatusMessage();
    }
    async Task handleClick(int i)
    {
        // https://stackoverflow.com/questions/1215198/c-sharp-copy-array-by-value
        var current = (string[])GameStateProvider.history[GameStateProvider.history.Count() - 1].Clone();

        current[i] = GameStateProvider.xIsNext ? "X" : "O";
        GameStateProvider.xIsNext = !GameStateProvider.xIsNext;

        GameStateProvider.history.Add(current);

        //foreach (var item in GameStateProvider.history)
        //{
        //    await IJSRuntime.InvokeVoidAsync(
        //    "showObject",
        //    item.ToList()
        //    );
        //}

        string winner = GameService.calculateWinner(current);

        if (!string.IsNullOrEmpty(winner))
        {
            status = "Winner: " + winner;
        }
        else
        {
            setStatusMessage();
        }

        GameStateProvider.notifyChanges();
    }

    void jumpTo(int i)
    {
        GameStateProvider.history = GameStateProvider.history.GetRange(0, i + 1);
    }

    private void setStatusMessage()
    {
        status = "Next player:" + (GameStateProvider.xIsNext ? "X" : "O");
    }
}
